<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <components>

    <component id="TimedIndexingService"
               service="CS2.Services.Indexing.IIndexingService, CS2.Services"
               type="CS2.Services.Indexing.TimedIndexingService, CS2.Services">
      <parameters>
        <inner>${LoggedIndexingService}</inner>
        <updateInterval>#{timedIndexingServiceUpdateInterval}</updateInterval>
      </parameters>
    </component>
    <component id="LoggedIndexingService"
               service="CS2.Services.Indexing.IIndexingService, CS2.Services"
               type="CS2.Services.Indexing.LoggedIndexingService, CS2.Services">
      <parameters>
        <inner>${IndexingService}</inner>
      </parameters>
    </component>

    <component id="IndexingService"
               service="CS2.Services.Indexing.IIndexingService, CS2.Services"
               type="CS2.Services.Indexing.IndexingService, CS2.Services">
      <parameters>
        <directory>#{directoryType}</directory>
        <parsingServices>
          <array>
            <item>${CSharpLoggedParsingService}</item>
          </array>
        </parsingServices>
        <repository>#{repositoryType}</repository>
        <exclusions>#{exclusions}</exclusions>
      </parameters>
    </component>

    <component id="InMemoryFilesRepository"
               service="CS2.Repositories.IFilesRepository, CS2.Repositories"
               type="CS2.Repositories.InMemoryFilesRepository, CS2.Repositories">
    </component>

    <component id="SQLiteFilesRepository"
               service="CS2.Repositories.IFilesRepository, CS2.Repositories"
               type="CS2.Repositories.SQLiteFilesRepository, CS2.Repositories">
      <parameters>
        <connectionString>#{databaseConnectionString}</connectionString>
      </parameters>
    </component>

    <component id="CSharpLoggedParsingService"
               service="CS2.Services.Parsing.IParsingService, CS2.Services"
               type="CS2.Services.Parsing.LoggedParsingService, CS2.Services">
      <parameters>
        <inner>${CSharpParsingService}</inner>
      </parameters>
    </component>

    <component id="CSharpParsingService"
               service="CS2.Services.Parsing.IParsingService, CS2.Services"
               type="CS2.Services.Parsing.CSharpParsingService, CS2.Services">
      <parameters>
        <parsingVisitor>${CSharpParsingVisitor}</parsingVisitor>
        <analyzer>${CSharpAnalyzer}</analyzer>
      </parameters>
    </component>

    <component id="CSharpParsingVisitor"
               service="CS2.Services.Parsing.IParsingVisitor, CS2.Services"
               type="CS2.Services.Parsing.CSharpParsingVisitor, CS2.Services">
    </component>

    <component id="StandardAnalyzer"
               service="Lucene.Net.Analysis.Analyzer, Lucene.Net"
               type="Lucene.Net.Analysis.Standard.StandardAnalyzer, Lucene.Net">
    </component>

    <component id="CSharpAnalyzer"
               service="Lucene.Net.Analysis.Analyzer, Lucene.Net"
               type="CS2.Services.Analysis.CSharpAnalyzer, CS2.Services">
    </component>

  </components>

</configuration>